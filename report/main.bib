@inproceedings{appel1968shading,
    author = {Appel, Arthur},
    title = {Some techniques for shading machine renderings of solids},
    year = {1968},
    isbn = {9781450378970},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1468075.1468082},
    doi = {10.1145/1468075.1468082},
    abstract = {Some applications of computer graphics require a vivid illusion of reality. These include the spatial organization of machine parts, conceptual architectural design, simulation of mechanisms, and industrial design. There has been moderate success in the automatic generation of wire frame, cardboard model, polyhedra, and quadric surface line drawings. The capability of the machine to generate vivid sterographic pictures has been demonstrated. There are, however considerable reasons for developing techniques by which line drawings of solids can be shaded, especially the enhancement of the sense of solidity and depth. Figures 1 and 2 illustrate the value of shading and shadow casting in spatial description. In the line drawing there is no clue as to the relative position of the flat plane and the sheet metal console. When shadows are rendered, it is clear that the plane is below and to the rear of the console, and the hollow nature of the sheet metal assembly is emphasized. Shading can specify the tone or color of a surface and the amount of light falling upon that surface from one or more light sources. Shadows when sharply defined tend to suggest another viewpoint and improves surface definition. When controlled, shading can also emphasize particular parts of the drawing. If techniques for the automatic determination of chiaroscuro with good resolution should prove to be competitive with line drawings, and this is a possibility, machine generated photographs might replace line drawings as the principal mode of graphical communication in engineering and architecture.},
    booktitle = {Proceedings of the April 30--May 2, 1968, Spring Joint Computer Conference},
    pages = {37–45},
    numpages = {9},
    location = {Atlantic City, New Jersey},
    series = {AFIPS '68 (Spring)}
}

@article{bmrt,
    author = {Larry Gritz and James K. Hahn},
    title = {BMRT: A Global Illumination Implementation of the RenderMan Standard},
    journal = {Journal of Graphics Tools},
    volume = {1},
    number = {3},
    pages = {29--47},
    year = {1996},
    publisher = {Taylor \& Francis},
    doi = {10.1080/10867651.1996.10487462},
    URL = {https://doi.org/10.1080/10867651.1996.10487462},
}

@Manual{POV_Ray_Documentation,
  title = {POV-Ray: Documentation},
  author = {{POV-Ray Team}},
  url = {https://www.povray.org/documentation/view/3.6.1/10/},
}

@TechReport{RenderMan_11_Release_Notes,
    title = {RenderMan 11 Release Notes},
    author = {Pixar},
    type = {Technical Report},
    url = {https://renderman.pixar.com/resources/RenderMan_20/rnotes-11.0.html},
}

@article{whitted2020OriginsOfGlobalIllumination,
    author={Whitted, Turner},
    journal={IEEE Computer Graphics and Applications}, 
    title={Origins of Global Illumination}, 
    year={2020},
    volume={40},
    number={1},
    pages={20-27},
    keywords={Lighting;Reflection;Ray Tracing},
    doi={10.1109/MCG.2019.2957688}
}

@inproceedings{kajiya1986rendering,
  title={The rendering equation},
  author={Kajiya, James T},
  booktitle={Proceedings of the 13th annual conference on Computer graphics and interactive techniques},
  pages={143--150},
  year={1986}
}

@book{veachMonteCarloLightTransport,
    place={Stanford, Calif},
    title={Robust Monte Carlo Methods for Light Transport Simulation},
    publisher={Stanford University, Department of Computer Science},
    author={Veach, Eric},
    year={1998}
}

@article{bavoil2008ssao,
  title={Screen space ambient occlusion},
  author={Bavoil, Louis and Sainz, Miguel},
  journal={NVIDIA developer information: http://developers. nvidia. com},
  volume={6},
  number={2},
  year={2008}
}

@inproceedings{gautron2020rtao,
  author = {Gautron, Pascal},
  title = {Real-Time Ray-Traced Ambient Occlusion of Complex Scenes using Spatial Hashing},
  year = {2020},
  isbn = {9781450379717},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3388767.3407375},
  doi = {10.1145/3388767.3407375},
  abstract = {Ambient occlusion is often approximated in real-time using screen-space techniques, leading to visible artifacts. Raytracing provides a unique way to increase the rendering fidelity by accurately sampling the distance to the surrounding objects, but it introduces sampling noise. We propose a real-time ray-traced ambient occlusion technique in which noise is filtered in world space. Using extended spatial hashing for efficient storage, multiresolution AO evaluation and ad-hoc filtering, we demonstrate the usability of our technique as a production feature usable in CAD viewports with scenes comprising hundreds of millions of polygons.},
  booktitle = {ACM SIGGRAPH 2020 Talks},
  articleno = {5},
  numpages = {2},
  location = {Virtual Event, USA},
  series = {SIGGRAPH '20}
}

@inproceedings{ritschel2009ssdo,
  author = {Ritschel, Tobias and Grosch, Thorsten and Seidel, Hans-Peter},
  title = {Approximating dynamic global illumination in image space},
  year = {2009},
  isbn = {9781605584294},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1507149.1507161},
  doi = {10.1145/1507149.1507161},
  abstract = {Physically plausible illumination at real-time framerates is often achieved using approximations. One popular example is ambient occlusion (AO), for which very simple and efficient implementations are used extensively in production. Recent methods approximate AO between nearby geometry in screen space (SSAO). The key observation described in this paper is, that screen-space occlusion methods can be used to compute many more types of effects than just occlusion, such as directional shadows and indirect color bleeding. The proposed generalization has only a small overhead compared to classic SSAO, approximates direct and one-bounce light transport in screen space, can be combined with other methods that simulate transport for macro structures and is visually equivalent to SSAO in the worst case without introducing new artifacts. Since our method works in screen space, it does not depend on the geometric complexity. Plausible directional occlusion and indirect lighting effects can be displayed for large and fully dynamic scenes at real-time frame rates.},
  booktitle = {Proceedings of the 2009 Symposium on Interactive 3D Graphics and Games},
  pages = {75–82},
  numpages = {8},
  keywords = {radiosity, global illumination, constant time},
  location = {Boston, Massachusetts},
  series = {I3D '09}
}

@article{rngMersenneTwister,
    author = {Matsumoto, Makoto and Nishimura, Takuji},
    title = {Mersenne twister: a 623-dimensionally equidistributed uniform pseudo-random number generator},
    year = {1998},
    issue_date = {Jan. 1998},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {8},
    number = {1},
    issn = {1049-3301},
    url = {https://doi.org/10.1145/272991.272995},
    doi = {10.1145/272991.272995},
    abstract = {A new algorithm called Mersenne Twister (MT) is proposed for generating uniform pseudorandom numbers. For a particular choice of parameters, the algorithm provides a super astronomical period of 219937 −1 and 623-dimensional equidistribution up to 32-bit accuracy, while using a working area of only 624 words. This is a new variant of the previously proposed generators, TGFSR, modified so as to admit a Mersenne-prime period. The characteristic polynomial has many terms. The distribution up to v bits accuracy for 1 ≤ v ≤ 32 is also shown to be good. An algorithm is also given that checks the primitivity of the characteristic polynomial of MT with computational complexity O(p2) where  p is the degree of the polynomial.We implemented this generator in portable C-code. It passed several stringent statistical tests, including diehard. Its speed is comparable to other modern generators. Its merits are due to the efficient algorithms that are unique to polynomial calculations over the two-element field.},
    journal = {ACM Trans. Model. Comput. Simul.},
    month = {jan},
    pages = {3–30},
    numpages = {28},
    keywords = {k-distribution, m-sequences, GFSR, MT19937, Mersenne primes, Mersenne twister, TGFSR, finite fields, incomplete array, inversive-decimation method, multiple-recursive matrix method, primitive polynomials, random number generation, tempering}
}

@article{marsaglia2003xorshift,
    title={Xorshift rngs},
    author={Marsaglia, George},
    journal={Journal of Statistical software},
    volume={8},
    pages={1--6},
    year={2003}
}

@mastersthesis{dotson2022dynamicaljs,
    title = {Dynamical.JS: A composable framework for online exploratory visualization of arbitrarily-complex multivariate networks},
    author = {Dotson, Robert Lee},
    school = {Harvard University Division of Continuing Education},
    year = {2022}
}


@article{Bohak_Kovalskyi_Linev_Mrak_Tadel_Strban_Tadel_Yagil_2024,
    title={RenderCore – a new WebGPU-based rendering engine for Root-eve},
    volume={295},
    DOI={10.1051/epjconf/202429503035},
    journal={EPJ Web of Conferences},
    author={Bohak, Ciril and Kovalskyi, Dmytro and Linev, Sergey and Mrak Tadel, Alja and Strban, Sebastien and Tadel, Matevž and Yagil, Avi},
    year={2024},
    pages={03035}
}

@article{kimmersdorfer2023webgpu,
    title={WebGPU for Scalable Client-Side Aggregate Visualization},
    author={Kimmersdorfer, Gerald and Wolf, Dominik and Waldner, Manuela},
    journal={Proceedings of Eurographics - The European Association for Computer Graphics},
    year={2023},
    pages={1--3},
    publisher={The European Association for Computer Graphics}
}

@article{fransson2023performance,
  title = {Performance comparison of WebGPU and WebGL in the Godot game engine},
  author = {Fransson, E. and Hermansson, J.},
  year = {2023},
  url = {https://urn.kb.se/resolve?urn=urn:nbn:se:bth-24706},
  type = {Dissertation}
}

@article{CHICKERUR2024919,
    title = {WebGL vs. WebGPU: A Performance Analysis for Web 3.0},
    journal = {Procedia Computer Science},
    volume = {233},
    pages = {919-928},
    year = {2024},
    note = {5th International Conference on Innovative Data Communication Technologies and Application (ICIDCA 2024)},
    issn = {1877-0509},
    doi = {https://doi.org/10.1016/j.procs.2024.03.281},
    url = {https://www.sciencedirect.com/science/article/pii/S1877050924006410},
    author = {Satyadhyan Chickerur and Sankalp Balannavar and Pranali Hongekar and Aditi Prerna and Soumya Jituri},
    keywords = {WebGL, WebGPU, Rendering, Performance analysis, Web3.0},
    abstract = {This study investigates web 3.0 heterogeneous computing with webGL, webGPU, and IPFS. The primary focus is on the benefits of utilising these technologies to enhance the functionality and performance of web 3.0 applications. The study investigates web 3.0 as it currently exists and the constraints that developers face due to graphic, computational, and storage capabilities. According to the findings, incorporating webGL and webGPU can considerably increase user experience, speed, efficacy, and decentralization. Finally, this study summarizes the importance of continuing research in this subject, particularly with relation to platform interoperability and the future prospects of heterogeneous computing on web 3.0 via graphical APIs.}
}

@online{Harrysson2019,
  title = {MaterialX Physically-Based Shading Nodes Introduction},
  author = {Harrysson, Niklas and Smythe, Doug and Stone, Jonathan},
  month = {July},
  year = {2019},
  url = {https://materialx.org/assets/MaterialX.v1.37REV2.PBRSpec.pdf},
  lastaccessed = "May 10, 2024",
}
