@article{ownShortPaper,
  author={Stucki, Simon and Ackermann, Philipp},
  journal={Proceedings WEB3D '24: The 29th International ACM Conference on 3D Web Technology}, 
  title={Physically-based Path Tracer using WebGPU and OpenPBR}, 
  year={2024},
  doi={10.1145/3665318.3677158}
}

@article{flynnTaxonomy,
  author={Flynn, Michael J.},
  journal={Proceedings of the IEEE}, 
  title={Very high-speed computing systems}, 
  year={1966},
  volume={54},
  number={12},
  pages={1901-1909},
  keywords={Computer aided instruction;Large-scale systems;Impedance matching;Art;Scientific computing;Arithmetic;Pervasive computing;Hardware;Turing machines},
  doi={10.1109/PROC.1966.5273}
}

@ARTICLE{flynnTaxonomy2,
  author={Flynn, Michael J.},
  journal={IEEE Transactions on Computers}, 
  title={Some Computer Organizations and Their Effectiveness}, 
  year={1972},
  volume={C-21},
  number={9},
  pages={948-960},
  keywords={Organizations;Computers;Entropy;Computational modeling;Data mining;Probability density function;Bandwidth;Computer organization;instruction stream;overlapped;parallel processors;resource hierarchy},
  doi={10.1109/TC.1972.5009071}}


@phdthesis{surfaceAlgorithmProcessor,
  author = {Watkins, Gary Scott},
  title = {A real time visible surface algorithm},
  year = {1970},
  publisher = {The University of Utah},
  note = {AAI7023061}
}

@article{chapSIMDgpu,
  author = {Levinthal, Adam and Porter, Thomas},
  title = {Chap - a SIMD graphics processor},
  year = {1984},
  issue_date = {July 1984},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {18},
  number = {3},
  issn = {0097-8930},
  url = {https://doi.org/10.1145/964965.808581},
  doi = {10.1145/964965.808581},
  abstract = {Special purpose processing systems designed for specific applications can provide extremely high performance at moderate cost. One such processor is presented for executing graphics and image processing algorithms as the basis of a digital film printer. Pixels in the system contain four parallel components: RGB for full color and an alpha channel for retaining transparency information. The data path of the processor contains four arithmetic elements connected through a crossbar network to a tessellated scratchpad memory. The single instruction, multiple data stream (SIMD) processor executes instructions on four pixel components in parallel. The instruction control unit (ICU) maintains an activity stack for tracking block-structured code, using data-dependent activity flags for conditional disabling subsets of the ALUs. Nested loops and if-then-else constructs can be programmed directly, with the ICU disabling and reenabling ALUs on the basis of their individual status bits.},
  journal = {SIGGRAPH Comput. Graph.},
  month = {jan},
  pages = {77–82},
  numpages = {6},
  keywords = {Tesselation, SIMD architecture, Parallel processing, Digital film printers, Computer graphics, Compositing}
}

@ARTICLE{sigWorkstation,
  author={Akeley, K.},
  journal={IEEE Computer Graphics and Applications}, 
  title={The Silicon Graphics 4D/240GTX superworkstation}, 
  year={1989},
  volume={9},
  number={4},
  pages={71-83},
  keywords={Silicon;Computer graphics;Displays;Monitoring;Workstations;Computer architecture;Hardware;Pixel;Supercomputers;Central Processing Unit},
  doi={10.1109/38.31466}
}

@inproceedings{appel1968shading,
    author = {Appel, Arthur},
    title = {Some techniques for shading machine renderings of solids},
    year = {1968},
    isbn = {9781450378970},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1468075.1468082},
    doi = {10.1145/1468075.1468082},
    abstract = {Some applications of computer graphics require a vivid illusion of reality. These include the spatial organization of machine parts, conceptual architectural design, simulation of mechanisms, and industrial design. There has been moderate success in the automatic generation of wire frame, cardboard model, polyhedra, and quadric surface line drawings. The capability of the machine to generate vivid sterographic pictures has been demonstrated. There are, however considerable reasons for developing techniques by which line drawings of solids can be shaded, especially the enhancement of the sense of solidity and depth. Figures 1 and 2 illustrate the value of shading and shadow casting in spatial description. In the line drawing there is no clue as to the relative position of the flat plane and the sheet metal console. When shadows are rendered, it is clear that the plane is below and to the rear of the console, and the hollow nature of the sheet metal assembly is emphasized. Shading can specify the tone or color of a surface and the amount of light falling upon that surface from one or more light sources. Shadows when sharply defined tend to suggest another viewpoint and improves surface definition. When controlled, shading can also emphasize particular parts of the drawing. If techniques for the automatic determination of chiaroscuro with good resolution should prove to be competitive with line drawings, and this is a possibility, machine generated photographs might replace line drawings as the principal mode of graphical communication in engineering and architecture.},
    booktitle = {Proceedings of the April 30--May 2, 1968, Spring Joint Computer Conference},
    pages = {37–45},
    numpages = {9},
    location = {Atlantic City, New Jersey},
    series = {AFIPS '68 (Spring)}
}

@book{fowles1989introduction,
  title={Introduction to modern optics},
  author={Fowles, Grant R},
  year={1989},
  publisher={Courier Corporation}
}

@article{bmrt,
    author = {Larry Gritz and James K. Hahn},
    title = {BMRT: A Global Illumination Implementation of the RenderMan Standard},
    journal = {Journal of Graphics Tools},
    volume = {1},
    number = {3},
    pages = {29--47},
    year = {1996},
    publisher = {Taylor \& Francis},
    doi = {10.1080/10867651.1996.10487462},
    URL = {https://doi.org/10.1080/10867651.1996.10487462},
}

@Manual{POV_Ray_Documentation,
  title = {POV-Ray: Documentation},
  author = {{POV-Ray Team}},
  url = {https://www.povray.org/documentation/view/3.6.1/10/},
}

@TechReport{RenderMan_11_Release_Notes,
    title = {RenderMan 11 Release Notes},
    author = {Pixar},
    type = {Technical Report},
    url = {https://renderman.pixar.com/resources/RenderMan_20/rnotes-11.0.html},
}

@article{whitted2020OriginsOfGlobalIllumination,
    author={Whitted, Turner},
    journal={IEEE Computer Graphics and Applications}, 
    title={Origins of Global Illumination}, 
    year={2020},
    volume={40},
    number={1},
    pages={20-27},
    keywords={Lighting;Reflection;Ray Tracing},
    doi={10.1109/MCG.2019.2957688}
}

@inproceedings{kajiya1986rendering,
  title={The rendering equation},
  author={Kajiya, James T.},
  booktitle={Proceedings of the 13th annual conference on Computer graphics and interactive techniques},
  pages={143--150},
  year={1986}
}

@book{veachMonteCarloLightTransport,
    place={Stanford, Calif},
    title={Robust Monte Carlo Methods for Light Transport Simulation},
    publisher={Stanford University, Department of Computer Science},
    author={Veach, Eric},
    year={1998}
}

@misc{nvidiaDlss,
  author = {NVIDIA Corporation},
  title = {NVIDIA DLSS},
  url = {https://www.nvidia.com/en-us/geforce/technologies/dlss/},
}

@misc{nvidiaRtxRayTracing,
  author = {NVIDIA Corporation},
  title = {NVIDIA RTX Ray Tracing},
  url = {https://developer.nvidia.com/rtx/ray-tracing},
  lastaccessed = "July 10, 2024",
}

@misc{appleM3GpuAdvancements,
  author = "Apple Developer",
  title = "Explore GPU advancements in M3 and A17 Pro - Tech Talks",
  url = "https://developer.apple.com/videos/play/tech-talks/111375",
  year = {2023},
  lastaccessed = "July 10, 2024",
}

@article{bavoil2008ssao,
  title={Screen space ambient occlusion},
  author={Bavoil, Louis and Sainz, Miguel},
  journal={NVIDIA developer information: http://developers. nvidia. com},
  volume={6},
  number={2},
  year={2008}
}

@Inbook{hybridRenderingBarreBrisebois2019,
  author="Barr{\'e}-Brisebois, Colin
  and Hal{\'e}n, Henrik
  and Wihlidal, Graham
  and Lauritzen, Andrew
  and Bekkers, Jasper
  and Stachowiak, Tomasz
  and Andersson, Johan",
  editor="Haines, Eric
  and Akenine-M{\"o}ller, Tomas",
  title="Hybrid Rendering for Real-Time Ray Tracing",
  bookTitle="Ray Tracing Gems: High-Quality and Real-Time Rendering with DXR and Other APIs",
  year="2019",
  publisher="Apress",
  address="Berkeley, CA",
  pages="437--473",
  abstract="This chapter describes the rendering pipeline developed for PICA PICA, a real-time ray tracing experiment featuring self-learning agents in a procedurally assembled world. PICA PICA showcases a hybrid rendering pipeline in which rasterization, compute, and ray tracing shaders work together to enable real-time visuals approaching the quality of offline path tracing.",
  isbn="978-1-4842-4427-2",
  doi="10.1007/978-1-4842-4427-2_25",
  url="https://doi.org/10.1007/978-1-4842-4427-2_25"
}

@inproceedings{gautron2020rtao,
  author = {Gautron, Pascal},
  title = {Real-Time Ray-Traced Ambient Occlusion of Complex Scenes using Spatial Hashing},
  year = {2020},
  isbn = {9781450379717},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3388767.3407375},
  doi = {10.1145/3388767.3407375},
  abstract = {Ambient occlusion is often approximated in real-time using screen-space techniques, leading to visible artifacts. Raytracing provides a unique way to increase the rendering fidelity by accurately sampling the distance to the surrounding objects, but it introduces sampling noise. We propose a real-time ray-traced ambient occlusion technique in which noise is filtered in world space. Using extended spatial hashing for efficient storage, multiresolution AO evaluation and ad-hoc filtering, we demonstrate the usability of our technique as a production feature usable in CAD viewports with scenes comprising hundreds of millions of polygons.},
  booktitle = {ACM SIGGRAPH 2020 Talks},
  articleno = {5},
  numpages = {2},
  location = {Virtual Event, USA},
  series = {SIGGRAPH '20}
}

@inproceedings{ritschel2009ssdo,
  author = {Ritschel, Tobias and Grosch, Thorsten and Seidel, Hans-Peter},
  title = {Approximating dynamic global illumination in image space},
  year = {2009},
  isbn = {9781605584294},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1507149.1507161},
  doi = {10.1145/1507149.1507161},
  abstract = {Physically plausible illumination at real-time framerates is often achieved using approximations. One popular example is ambient occlusion (AO), for which very simple and efficient implementations are used extensively in production. Recent methods approximate AO between nearby geometry in screen space (SSAO). The key observation described in this paper is, that screen-space occlusion methods can be used to compute many more types of effects than just occlusion, such as directional shadows and indirect color bleeding. The proposed generalization has only a small overhead compared to classic SSAO, approximates direct and one-bounce light transport in screen space, can be combined with other methods that simulate transport for macro structures and is visually equivalent to SSAO in the worst case without introducing new artifacts. Since our method works in screen space, it does not depend on the geometric complexity. Plausible directional occlusion and indirect lighting effects can be displayed for large and fully dynamic scenes at real-time frame rates.},
  booktitle = {Proceedings of the 2009 Symposium on Interactive 3D Graphics and Games},
  pages = {75–82},
  numpages = {8},
  keywords = {radiosity, global illumination, constant time},
  location = {Boston, Massachusetts},
  series = {I3D '09}
}

@article{randomnessCryptography,
  author={Gennaro, Rosario},
  journal={IEEE Security \& Privacy}, 
  title={Randomness in cryptography}, 
  year={2006},
  volume={4},
  number={2},
  pages={64-67},
  keywords={Cryptography;Entropy;Random processes;Application software;Computer science;Computer security;Privacy;randomness;predictable;cryptography;nonce},
  doi={10.1109/MSP.2006.49}
}

@online{cloudflareLavaRand,
  title = {LavaRand in Production},
  author = {Liebow-Feeser, Joshua},
  month = {June},
  year = {2017},
  url = {https://blog.cloudflare.com/randomness-101-lavarand-in-production},
  lastaccessed = "June 27, 2024",
}

@article{rngMersenneTwister,
    author = {Matsumoto, Makoto and Nishimura, Takuji},
    title = {Mersenne twister: a 623-dimensionally equidistributed uniform pseudo-random number generator},
    year = {1998},
    issue_date = {Jan. 1998},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {8},
    number = {1},
    issn = {1049-3301},
    url = {https://doi.org/10.1145/272991.272995},
    doi = {10.1145/272991.272995},
    abstract = {A new algorithm called Mersenne Twister (MT) is proposed for generating uniform pseudorandom numbers. For a particular choice of parameters, the algorithm provides a super astronomical period of 219937 −1 and 623-dimensional equidistribution up to 32-bit accuracy, while using a working area of only 624 words. This is a new variant of the previously proposed generators, TGFSR, modified so as to admit a Mersenne-prime period. The characteristic polynomial has many terms. The distribution up to v bits accuracy for 1 ≤ v ≤ 32 is also shown to be good. An algorithm is also given that checks the primitivity of the characteristic polynomial of MT with computational complexity O(p2) where  p is the degree of the polynomial.We implemented this generator in portable C-code. It passed several stringent statistical tests, including diehard. Its speed is comparable to other modern generators. Its merits are due to the efficient algorithms that are unique to polynomial calculations over the two-element field.},
    journal = {ACM Trans. Model. Comput. Simul.},
    month = {jan},
    pages = {3–30},
    numpages = {28},
    keywords = {k-distribution, m-sequences, GFSR, MT19937, Mersenne primes, Mersenne twister, TGFSR, finite fields, incomplete array, inversive-decimation method, multiple-recursive matrix method, primitive polynomials, random number generation, tempering}
}

@article{marsaglia2003xorshift,
    title={Xorshift rngs},
    author={Marsaglia, George},
    journal={Journal of Statistical software},
    volume={8},
    pages={1--6},
    year={2003}
}

@article{o2014pcg,
  title={PCG: A family of simple fast space-efficient statistically good algorithms for random number generation},
  author={O'Neill, Melissa E.},
  journal={ACM Transactions on Mathematical Software},
  year={2014}
}

@mastersthesis{dotson2022dynamicaljs,
    title = {Dynamical.JS: A composable framework for online exploratory visualization of arbitrarily-complex multivariate networks},
    author = {Dotson, Robert Lee},
    school = {Harvard University Division of Continuing Education},
    year = {2022}
}


@article{Bohak_Kovalskyi_Linev_Mrak_Tadel_Strban_Tadel_Yagil_2024,
    title={RenderCore – a new WebGPU-based rendering engine for Root-eve},
    volume={295},
    DOI={10.1051/epjconf/202429503035},
    journal={EPJ Web of Conferences},
    author={Bohak, Ciril and Kovalskyi, Dmytro and Linev, Sergey and Mrak Tadel, Alja and Strban, Sebastien and Tadel, Matevž and Yagil, Avi},
    year={2024},
    pages={03035}
}

@article{kimmersdorfer2023webgpu,
    title={WebGPU for Scalable Client-Side Aggregate Visualization},
    author={Kimmersdorfer, Gerald and Wolf, Dominik and Waldner, Manuela},
    journal={Proceedings of Eurographics - The European Association for Computer Graphics},
    year={2023},
    pages={1--3},
    publisher={The European Association for Computer Graphics}
}

@article{fransson2023performance,
  title = {Performance comparison of WebGPU and WebGL in the Godot game engine},
  author = {Fransson, Emil and Hermansson, Jonatan},
  year = {2023},
  url = {https://urn.kb.se/resolve?urn=urn:nbn:se:bth-24706},
  type = {Dissertation}
}

@article{CHICKERUR2024919,
    title = {WebGL vs. WebGPU: A Performance Analysis for Web 3.0},
    journal = {Procedia Computer Science},
    volume = {233},
    pages = {919-928},
    year = {2024},
    note = {5th International Conference on Innovative Data Communication Technologies and Application (ICIDCA 2024)},
    issn = {1877-0509},
    doi = {https://doi.org/10.1016/j.procs.2024.03.281},
    url = {https://www.sciencedirect.com/science/article/pii/S1877050924006410},
    author = {Satyadhyan Chickerur and Sankalp Balannavar and Pranali Hongekar and Aditi Prerna and Soumya Jituri},
    keywords = {WebGL, WebGPU, Rendering, Performance analysis, Web3.0},
    abstract = {This study investigates web 3.0 heterogeneous computing with webGL, webGPU, and IPFS. The primary focus is on the benefits of utilising these technologies to enhance the functionality and performance of web 3.0 applications. The study investigates web 3.0 as it currently exists and the constraints that developers face due to graphic, computational, and storage capabilities. According to the findings, incorporating webGL and webGPU can considerably increase user experience, speed, efficacy, and decentralization. Finally, this study summarizes the importance of continuing research in this subject, particularly with relation to platform interoperability and the future prospects of heterogeneous computing on web 3.0 via graphical APIs.}
}

@Book{Pharr_Physically_Based_Rendering_2023,
  title = {Physically Based Rendering: From Theory to Implementation},
  author = {Pharr, Matt and Jakob, Wenzel and Humphreys, Greg},
  year = {2023},
  publisher = {The MIT Press}
}

@book{lambert1760photometria,
  title={Photometria},
  author={Lambert, Johann Heinrich},
  year={1760}
}

@inproceedings{oren1994generalization,
  title={Generalization of Lambert's reflectance model},
  author={Oren, Michael and Nayar, Shree K},
  booktitle={Proceedings of the 21st annual conference on Computer graphics and interactive techniques},
  pages={239--246},
  year={1994}
}

@online{Harrysson2019,
  title = {MaterialX Physically-Based Shading Nodes Introduction},
  author = {Harrysson, Niklas and Smythe, Doug and Stone, Jonathan},
  month = {July},
  year = {2019},
  url = {https://materialx.org/assets/MaterialX.v1.37REV2.PBRSpec.pdf},
  lastaccessed = "May 10, 2024",
}

@online{SafariWebGPUSupport,
  title = {WebGPU now available for testing in Safari Technology Preview},
  author = {Wyrzykowski, Mike},
  month = {December},
  year = {2023},
  url = {https://webkit.org/blog/14879/webgpu-now-available-for-testing-in-safari-technology-preview/},
  lastaccessed = "May 30, 2024",
}

@online{FirefoxWebGPUSupport,
  title = {Mozilla Platform GFX WebGPU},
  author = {Mozilla},
  month = {April},
  year = {2023},
  url = {https://wiki.mozilla.org/Platform/GFX/WebGPU},
  lastaccessed = "May 30, 2024",
}

@online{ChromeWebGPUSupport,
  title = {Chrome Platform Status: WebGPU},
  author = {Google},
  month = {April},
  year = {2023},
  url = {https://chromestatus.com/feature/6213121689518080},
  lastaccessed = "May 30, 2024",
}

@online{ChromeAndroidWebGPUSupport,
  title = {Chrome Platform Status: WebGPU on Android},
  author = {Google},
  month = {January},
  year = {2024},
  url = {https://chromestatus.com/feature/5119617865613312},
  lastaccessed = "May 30, 2024",
}

@online{BabylonJSWebGPUSupport,
  title = {WebGPU Support},
  author = {Babylon.js},
  month = {October},
  year = {2022},
  url = {https://doc.babylonjs.com/setup/support/webGPU},
  lastaccessed = "May 30, 2024",
}

@online{ThreeJSWebGPUSupport,
  title = {Three.js WebGPURenderer.js},
  author = {{Three.js}},
  month = {January},
  year = {2024},
  url = {https://github.com/mrdoob/three.js/blob/de367cb2e866d4ffc9bd4b23dddd137a93ee65ba/examples/jsm/renderers/webgpu/WebGPURenderer.js},
  lastaccessed = "May 30, 2024",
}

@online{playCanvasWebGPUSupport,
  title = {Initial WebGPU support lands in PlayCanvas Engine 1.62},
  author = {Valigursky, Martin},
  month = {March},
  year = {2023},
  url = {https://blog.playcanvas.com/initial-webgpu-support-lands-in-playcanvas-engine-1-62/},
  lastaccessed = "May 30, 2024",
}

@online{UnityWebGPUSupport,
  title = {Web runtime updates are here: Take your browser to the next level},
  author = {Craven, Ben and Buscemi, Matthew and Bowker, Anthony},
  month = {November},
  year = {2023},
  url = {https://blog.unity.com/engine-platform/web-runtime-updates-enhance-browser-experience},
  lastaccessed = "May 30, 2024",
}

@online{WebGPUConformanceTestSuite,
  title = {WebGPU Conformance Test Suite},
  author = {{W3C group for GPU web standards}},
  month = {May},
  year = {2024},
  url = {https://github.com/gpuweb/cts},
  lastaccessed = "May 30, 2024",
}

@online{pathTracerWallace,
  title = {WebGL Path Tracing},
  author = {Wallace, Evan},
  month = {August},
  year = {2011},
  url = {https://experiments.withgoogle.com/webgl-path-tracing},
  lastaccessed = "May 30, 2024",
}

@online{ThreeJsPathTracerJohnson,
  title = {three-gpu-pathtracer},
  author = {Johnson, Garrett},
  month = {May},
  year = {2024},
  url = {https://github.com/gkjohnson/three-gpu-pathtracer},
  lastaccessed = "May 30, 2024",
}

@online{ThreeJsPathTracerLoftis,
  title = {THREE.js-PathTracing-Renderer},
  author = {Loftis, Erich},
  month = {May},
  year = {2024},
  url = {https://github.com/erichlof/THREE.js-PathTracing-Renderer},
  lastaccessed = "May 30, 2024",
}

@online{PathTracerDassault,
  title = {dspbr-pt},
  author = {Sdorra, Bastian and Häußler, Tobias},
  month = {July},
  year = {2022},
  url = {https://github.com/DassaultSystemes-Technology/dspbr-pt},
  lastaccessed = "May 30, 2024",
}
